name: Deployment
on:
  push:
    branches:
      - main
      - dev
##we can define env variable a different levels
##workflow level, job level, even step level
env:
  MONGODB_DB_NAME: gha-demo
jobs:
  test:
    ##with enviroment we choose a github enviroment to take 
    ##secrets form there
    enviroment: testing
    env: 
      MONGODB_CLUSTER_ADDRESS: address
      ##sabe crednetial as plain value is not a good practice
      # MONGODB_USERNAME: username
      # MONGODB_PASSWOD: password
      ##aapproah using secrets
      ##secrets can be created on github page at 
      ##organization level or repository level
      ###there also exists enviroment secrets
      MONGODB_USERNAME: ${{ secrets.MONGODB_USERNAME }}
      MONGODB_PASSWORD: ${{ secrets.MONGODB_PASSWORD}}
      PORT: port
    environment: testing
    runs-on: ubuntu-latest
    steps:
      - name: Get Code
        uses: actions/checkout@v3
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: npm-deps-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        run: npm ci
      - name: Run server
        ##here we use the port variable 
        run: npm start & npx wait-on http://127.0.0.1:$PORT
      - name: Run tests
        run: npm test
      - name: Output information
        ##THIS IS OTHER WAY TO ACCED ENV VARIBALES
        run: |
          echo "MONGODB_USERNAME: {{ env.MONGODB_USERNAME }}"
  deploy:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Output information
        run: |        
          echo "MONGODB_USERNAME: {{ env.MONGODB_USERNAME }}"
