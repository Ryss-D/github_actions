name: Deployment (Container)
on:
  push:
    branches:
      - main
      - dev
env:
  CACHE_KEY: node-deps
  MONGODB_DB_NAME: gha-demo
jobs:
  test:
    environment: testing
    runs-on: ubuntu-latest
    ##this is the only needed to run job in a container
    ## images names need to be avaliable in public repositories ieg dockerhub
    ##container:  node 
    ##or
    container:
      image: node:16
      ##this refers to container env variables; not step variables
      # env: 
    env:
      MONGODB_CONNECTION_PROTOCOL: mongodb
      ##MONGODB_CONNECTION_PROTOCOL: mongodb+srv
      ##if a job already is running into a container
      ## we can connect to servies just passing the identificator given by us
      ## and github actions will connectit 
      MONGODB_CLUSTER_ADDRESS: mongodb 
      ##MONGODB_CLUSTER_ADDRESS: cluster0.ntrwp.mongodb.net
      ##but if our job does not run into a container
      ##we must handle networking as on a local machine
      ##MONGODB_CLUSTER_ADDRESS: 127.0.0.1:27017
      ## we change credentials to described in the sevice container
      MONGODB_USERNAME: root
      MONGODB_PASSWORD: example
      # MONGODB_USERNAME: ${{ secrets.MONGODB_USERNAME }}
      # MONGODB_PASSWORD: ${{ secrets.MONGODB_PASSWORD }}
      PORT: 8080
    ##this is useful to add service containers into our workglow
    ##services always run in container images
    services:
      ##here we add a label for the servie we want to add
      ##name is up to us
      mongodb:
        ##this is the identificator of the image
        image: mongo
        ##if we want to communicate to our sevice container from a job who does not 
        ##run in a contianer, we must open the corresponding port for connection
        ##ports:
        ##  -27017:27017
        env: 
          MONGO_INITDB_ROOT_USERNAME: root
          MONGO_INITDB_ROOT_PASSWORD: example 
      #another-service:
    steps:
      - name: Get Code
        uses: actions/checkout@v3
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ env.CACHE_KEY }}-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        run: npm ci
      - name: Run server
        run: npm start & npx wait-on http://127.0.0.1:$PORT # requires MongoDB Atlas to accept requests from anywhere!
      - name: Run tests
        run: npm test
      - name: Output information
        run: |
          echo "MONGODB_USERNAME: $MONGODB_USERNAME"
  deploy:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Output information
        env:
          PORT: 3000
        run: |        
          echo "MONGODB_DB_NAME: $MONGODB_DB_NAME"
          echo "MONGODB_USERNAME: $MONGODB_USERNAME"
          echo "${{ env.PORT }}"
